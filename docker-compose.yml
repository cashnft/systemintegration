version: '3.8'

services:
  auth-db:
    image: postgres:14-alpine
    volumes:
      - auth_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_password
      - POSTGRES_DB=auth_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    depends_on:
      - auth-service
      - todo-service
      - gateway

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus  
  gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - TODO_SERVICE_URL=http://todo-service:8000
    depends_on:
      - auth-service
      - todo-service
    volumes:
      - ./gateway:/app
  todo-db:
    image: postgres:14-alpine
    volumes:
      - todo_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=todo_password
      - POSTGRES_DB=todo_db
    ports:
      - "5433:5432"  # Different port to avoid conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: 
      context: ./services/auth-service
      dockerfile: Dockerfile
    volumes:
      - ./services/auth-service:/app
    environment:
      - DATABASE_URL=postgresql://auth_user:auth_password@auth-db/auth_db
      - SECRET_KEY=your-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      auth-db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  todo-service:
    build: 
      context: ./services/todo-service
      dockerfile: Dockerfile
    volumes:
      - ./services/todo-service:/app
    environment:
      - DATABASE_URL=postgresql://todo_user:todo_password@todo-db/todo_db
      - AUTH_SERVICE_URL=http://auth-service:8000
    ports:
      - "8001:8000"
    depends_on:
      todo-db:
        condition: service_healthy
      auth-service:
        condition: service_started
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_TODO_API_URL=http://localhost:8001
    depends_on:
      - auth-service
      - todo-service

volumes:
  auth_data:
  todo_data:
  prometheus_data:
  grafana_data: